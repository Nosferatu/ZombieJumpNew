import pygame 
import os
from pygame.locals import *

def load_sliced_sprites(w, h, filename):
    images= []
    master_image = pygame.image.load(filename).convert_alpha()
    master_width,master_height = master_image.get_size()
    for i in xrange(int(master_width/w)):                  
        images.append(master_image.subsurface((i*w,0,w,h)))
    
    return images


class Player(pygame.sprite.Sprite):
    def __init__(self,initial_position,fps):

        
        pygame.sprite.Sprite.__init__(self)
        self.act_frame = 0
        self.images = load_sliced_sprites(100,100,"spaceMarineRight.png")

        self.image = self.images[0]
        self.rect= self.image.get_rect()
        self.rect.topleft=initial_position
        self.fps = fps
        self.mask = pygame.mask.from_surface(self.image)
        
        self.time = 0.0
        self.change_time = 1.0/self.fps
        self.jumpHeight = 40
        self.isjump = 0
        self.v = self.jumpHeight
        self.m = 0.02
    
    def jump(self):
        self.isjump = 1
    
    def update(self,time_passed):
        self.time += time_passed
        if self.time >= self.change_time:
                self.act_frame = (self.act_frame + 1) % len(self.images)
                self.image = self.images[self.act_frame]
                self.time = 0


                    
        if self.isjump:
            if self.v > 0:
                F = ( 0.5 * self.m * (self.v*self.v) )
            else:
                F = -( 0.5 * self.m * (self.v*self.v) )
    
            # Change position
            self.rect.top =  self.rect.top - F
 
            # Change velocity
            self.v = self.v - 1
 
            # If ground is reached, reset variables.
            if  self.rect.top >= 400:
                self.rect.top = 410
                self.isjump = 0
                self.v = self.jumpHeight
                      